{"version":3,"file":"bundle.7b218849df96e10b2bc0.js","mappings":"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","sources":["webpack://big-trip/./src/const/const.js","webpack://big-trip/./src/render.js","webpack://big-trip/./src/utils/utils.js","webpack://big-trip/./src/view/filters-view.js","webpack://big-trip/./src/view/sort-view.js","webpack://big-trip/./src/view/edit-form-view.js","webpack://big-trip/./src/view/route-point-view.js","webpack://big-trip/./src/model/point.js","webpack://big-trip/./src/model/offer.js","webpack://big-trip/./src/model/destination.js","webpack://big-trip/./src/mock/mock-data.js","webpack://big-trip/./src/model/model.js","webpack://big-trip/./src/main.js","webpack://big-trip/./src/presenter/trip-presenter.js"],"sourcesContent":["export const RENDER_POSITION = {\n  BEFOREBEGIN: 'beforebegin',\n  AFTERBEGIN: 'afterbegin',\n  BEFOREEND: 'beforeend',\n  AFTEREND: 'afterend',\n};\n\nexport const EVENT_TYPES = ['taxi', 'bus', 'train', 'ship', 'drive', 'flight', 'check-in', 'sightseeing', 'restaurant'];\n\nexport const FILTER_TYPES = ['everything', 'future', 'present', 'past'];\n","import { RENDER_POSITION } from './const/const.js';\n\nfunction createElement(template) {\n  const newElement = document.createElement('div');\n  newElement.innerHTML = template;\n\n  return newElement.firstElementChild;\n}\n\nfunction render(component, container, place = RENDER_POSITION.BEFOREEND) {\n  container.insertAdjacentElement(place, component.getElement());\n}\n\nexport { RENDER_POSITION, createElement, render };\n","export const capitalizeFirstLetter = (str) => {\n  if (typeof str !== 'string' || str.length === 0) {\n    return str;\n  }\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n","import { createElement } from '../render';\nimport { FILTER_TYPES } from '../const/const';\nimport { capitalizeFirstLetter } from '../utils/utils';\n\nconst createFilterOption = (type) =>\n  `\n    <div class=\"trip-filters__filter\">\n      <input id=\"filter-${type}\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"${type}\">\n      <label class=\"trip-filters__filter-label\" for=\"filter-${type}\">${capitalizeFirstLetter(type)}</label>\n    </div>\n`;\n\nconst createFiltersTemplate = () =>\n  `\n    <form class=\"trip-filters\" action=\"#\" method=\"get\">\n\n      ${FILTER_TYPES.map((type) => createFilterOption(type)).join('')}\n\n      <button class=\"visually-hidden\" type=\"submit\">Accept filter</button>\n    </form>\n  `;\n\nexport default class FiltersView {\n  getTemplate() {\n    return createFiltersTemplate();\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElemtnt() {\n    this.element = null;\n  }\n}\n","import { createElement } from '../render';\n\nconst createSortTemplate = () =>\n  `\n    <form class=\"trip-events__trip-sort  trip-sort\" action=\"#\" method=\"get\">\n      <div class=\"trip-sort__item  trip-sort__item--day\">\n        <input id=\"sort-day\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-day\" checked>\n        <label class=\"trip-sort__btn\" for=\"sort-day\">Day</label>\n      </div>\n\n      <div class=\"trip-sort__item  trip-sort__item--event\">\n        <input id=\"sort-event\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-event\" disabled>\n        <label class=\"trip-sort__btn\" for=\"sort-event\">Event</label>\n      </div>\n\n      <div class=\"trip-sort__item  trip-sort__item--time\">\n        <input id=\"sort-time\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-time\">\n        <label class=\"trip-sort__btn\" for=\"sort-time\">Time</label>\n      </div>\n\n      <div class=\"trip-sort__item  trip-sort__item--price\">\n        <input id=\"sort-price\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-price\">\n        <label class=\"trip-sort__btn\" for=\"sort-price\">Price</label>\n      </div>\n\n      <div class=\"trip-sort__item  trip-sort__item--offer\">\n        <input id=\"sort-offer\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-offer\" disabled>\n        <label class=\"trip-sort__btn\" for=\"sort-offer\">Offers</label>\n      </div>\n    </form>\n  `;\n\nexport default class SortView {\n  getTemplate() {\n    return createSortTemplate();\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElemtnt() {\n    this.element = null;\n  }\n}\n","import { createElement } from '../render';\nimport { EVENT_TYPES } from '../const/const';\nimport { capitalizeFirstLetter } from '../utils/utils';\n\nconst createEventTypeOption = (type) =>\n  `\n    <div class=\"event__type-item\">\n      <input id=\"event-type-${type}-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"${type}\">\n      <label class=\"event__type-label  event__type-label--${type}\" for=\"event-type-${type}-1\">${capitalizeFirstLetter(type)}</label>\n    </div>`;\n\nconst createFormTemplate = () =>\n  `\n    <form class=\"event event--edit\" action=\"#\" method=\"post\">\n      <header class=\"event__header\">\n        <div class=\"event__type-wrapper\">\n          <label class=\"event__type  event__type-btn\" for=\"event-type-toggle-1\">\n            <span class=\"visually-hidden\">Choose event type</span>\n            <img class=\"event__type-icon\" width=\"17\" height=\"17\" src=\"img/icons/flight.png\" alt=\"Event type icon\">\n          </label>\n          <input class=\"event__type-toggle  visually-hidden\" id=\"event-type-toggle-1\" type=\"checkbox\">\n\n          <div class=\"event__type-list\">\n            <fieldset class=\"event__type-group\">\n              <legend class=\"visually-hidden\">Event type</legend>\n\n              ${EVENT_TYPES.map((type) => createEventTypeOption(type)).join('')}\n\n            </fieldset>\n          </div>\n        </div>\n\n        <div class=\"event__field-group  event__field-group--destination\">\n          <label class=\"event__label  event__type-output\" for=\"event-destination-1\">\n            Flight\n          </label>\n          <input class=\"event__input  event__input--destination\" id=\"event-destination-1\" type=\"text\" name=\"event-destination\" value=\"Chamonix\" list=\"destination-list-1\">\n          <datalist id=\"destination-list-1\">\n            <option value=\"Amsterdam\"></option>\n            <option value=\"Geneva\"></option>\n            <option value=\"Chamonix\"></option>\n          </datalist>\n        </div>\n\n        <div class=\"event__field-group  event__field-group--time\">\n          <label class=\"visually-hidden\" for=\"event-start-time-1\">From</label>\n          <input class=\"event__input  event__input--time\" id=\"event-start-time-1\" type=\"text\" name=\"event-start-time\" value=\"18/03/19 12:25\">\n          &mdash;\n          <label class=\"visually-hidden\" for=\"event-end-time-1\">To</label>\n          <input class=\"event__input  event__input--time\" id=\"event-end-time-1\" type=\"text\" name=\"event-end-time\" value=\"18/03/19 13:35\">\n        </div>\n\n        <div class=\"event__field-group  event__field-group--price\">\n          <label class=\"event__label\" for=\"event-price-1\">\n            <span class=\"visually-hidden\">Price</span>\n            &euro;\n          </label>\n          <input class=\"event__input  event__input--price\" id=\"event-price-1\" type=\"text\" name=\"event-price\" value=\"160\">\n        </div>\n\n        <button class=\"event__save-btn  btn  btn--blue\" type=\"submit\">Save</button>\n        <button class=\"event__reset-btn\" type=\"reset\">Delete</button>\n        <button class=\"event__rollup-btn\" type=\"button\">\n          <span class=\"visually-hidden\">Open event</span>\n        </button>\n      </header>\n      <section class=\"event__details\">\n        <section class=\"event__section  event__section--offers\">\n          <h3 class=\"event__section-title  event__section-title--offers\">Offers</h3>\n\n          <div class=\"event__available-offers\">\n            <div class=\"event__offer-selector\">\n              <input class=\"event__offer-checkbox  visually-hidden\" id=\"event-offer-luggage-1\" type=\"checkbox\" name=\"event-offer-luggage\" checked>\n              <label class=\"event__offer-label\" for=\"event-offer-luggage-1\">\n                <span class=\"event__offer-title\">Add luggage</span>\n                &plus;&euro;&nbsp;\n                <span class=\"event__offer-price\">50</span>\n              </label>\n            </div>\n\n            <div class=\"event__offer-selector\">\n              <input class=\"event__offer-checkbox  visually-hidden\" id=\"event-offer-comfort-1\" type=\"checkbox\" name=\"event-offer-comfort\" checked>\n              <label class=\"event__offer-label\" for=\"event-offer-comfort-1\">\n                <span class=\"event__offer-title\">Switch to comfort</span>\n                &plus;&euro;&nbsp;\n                <span class=\"event__offer-price\">80</span>\n              </label>\n            </div>\n\n            <div class=\"event__offer-selector\">\n              <input class=\"event__offer-checkbox  visually-hidden\" id=\"event-offer-meal-1\" type=\"checkbox\" name=\"event-offer-meal\">\n              <label class=\"event__offer-label\" for=\"event-offer-meal-1\">\n                <span class=\"event__offer-title\">Add meal</span>\n                &plus;&euro;&nbsp;\n                <span class=\"event__offer-price\">15</span>\n              </label>\n            </div>\n\n            <div class=\"event__offer-selector\">\n              <input class=\"event__offer-checkbox  visually-hidden\" id=\"event-offer-seats-1\" type=\"checkbox\" name=\"event-offer-seats\">\n              <label class=\"event__offer-label\" for=\"event-offer-seats-1\">\n                <span class=\"event__offer-title\">Choose seats</span>\n                &plus;&euro;&nbsp;\n                <span class=\"event__offer-price\">5</span>\n              </label>\n            </div>\n\n            <div class=\"event__offer-selector\">\n              <input class=\"event__offer-checkbox  visually-hidden\" id=\"event-offer-train-1\" type=\"checkbox\" name=\"event-offer-train\">\n              <label class=\"event__offer-label\" for=\"event-offer-train-1\">\n                <span class=\"event__offer-title\">Travel by train</span>\n                &plus;&euro;&nbsp;\n                <span class=\"event__offer-price\">40</span>\n              </label>\n            </div>\n          </div>\n        </section>\n\n        <section class=\"event__section  event__section--destination\">\n          <h3 class=\"event__section-title  event__section-title--destination\">Destination</h3>\n          <p class=\"event__destination-description\">Chamonix-Mont-Blanc (usually shortened to Chamonix) is a resort area near the junction of France, Switzerland and Italy. At the base of Mont Blanc, the highest summit in the Alps, it's renowned for its skiing.</p>\n        </section>\n      </section>\n    </form>\n  `;\n\nexport default class EditForm {\n  getTemplate() {\n    return createFormTemplate();\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","import { createElement } from '../render';\n\nconst createRoutePointTemplate = (point, destination, offers) => {\n  const { dateFrom, dateTo, basePrice, isFavorite, type } = point;\n\n  const favoriteClassName = isFavorite ? 'event__favorite-btn--active' : '';\n\n  const offersTemplate = offers\n    .map(\n      (offer) => `\n      <li class=\"event__offer\">\n        <span class=\"event__offer-title\">${offer.title}</span>\n        &plus;&euro;&nbsp;\n        <span class=\"event__offer-price\">${offer.price}</span>\n      </li>\n    `\n    )\n    .join('');\n\n  const dateFromISO = dateFrom.toISOString(); // 2019-03-18\n  const dateFromTime = dateFrom.toLocaleTimeString('en-US', {\n    // MAR 18\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n  const dateFromDay = dateFrom.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n  const dateToISO = dateTo.toISOString();\n  const dateToTime = dateTo.toLocaleTimeString('en-US', {\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n\n  return `\n    <li class=\"trip-events__item\">\n      <div class=\"event\">\n        <time class=\"event__date\" datetime=\"${dateFromISO}\">${dateFromDay}</time>\n        <div class=\"event__type\">\n          <img class=\"event__type-icon\" width=\"42\" height=\"42\" src=\"img/icons/${type}.png\" alt=\"Event type icon\">\n        </div>\n        <h3 class=\"event__title\">${type} ${destination.name}</h3>\n        <div class=\"event__schedule\">\n          <p class=\"event__time\">\n            <time class=\"event__start-time\" datetime=\"${dateFromISO}\">${dateFromTime}</time>\n            &mdash;\n            <time class=\"event__end-time\" datetime=\"${dateToISO}\">${dateToTime}\"</time>\n          </p>\n          <p class=\"event__duration\">30M</p>\n        </div>\n        <p class=\"event__price\">\n          &euro;&nbsp;<span class=\"event__price-value\">${basePrice}</span>\n        </p>\n        <h4 class=\"visually-hidden\">Offers:</h4>\n        <ul class=\"event__selected-offers\">\n          ${offersTemplate}\n        </ul>\n        <button class=\"event__favorite-btn ${favoriteClassName}\" type=\"button\">\n          <span class=\"visually-hidden\">Add to favorite</span>\n          <svg class=\"event__favorite-icon\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\">\n            <path d=\"M14 21l-8.22899 4.3262 1.57159-9.1631L.685209 9.67376 9.8855 8.33688 14 0l4.1145 8.33688 9.2003 1.33688-6.6574 6.48934 1.5716 9.1631L14 21z\"/>\n          </svg>\n        </button>\n        <button class=\"event__rollup-btn\" type=\"button\">\n          <span class=\"visually-hidden\">Open event</span>\n        </button>\n      </div>\n    </li>\n  `;\n};\n\nexport default class RoutePointView {\n  constructor(point, destination, offers) {\n    this.point = point;\n    this.destination = destination;\n    this.offers = offers;\n    this.element = null;\n  }\n\n  getTemplate() {\n    return createRoutePointTemplate(this.point, this.destination, this.offers);\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","export class Point {\n  constructor({ id, type, destinationId, dateFrom, dateTo, basePrice, isFavorite = false, offerIds = [] }) {\n    this.id = id;\n    this.type = type;\n    this.destinationId = destinationId;\n    this.dateFrom = dateFrom;\n    this.dateTo = dateTo;\n    this.basePrice = basePrice;\n    this.isFavorite = isFavorite;\n    this.offerIds = offerIds;\n  }\n}\n","export class Offer {\n  constructor({ id, type, title, price }) {\n    this.id = id;\n    this.type = type;\n    this.title = title;\n    this.price = price;\n  }\n}\n","export class Destination {\n  constructor({ id, description, name, pictures }) {\n    this.id = id;\n    this.description = description;\n    this.name = name;\n    this.pictures = pictures;\n  }\n}\n","import { Point } from '../model/point';\nimport { Offer } from '../model/offer';\nimport { Destination } from '../model/destination';\n\nconst TYPES = ['taxi', 'bus', 'train', 'ship', 'drive', 'flight', 'check-in', 'sightseeing', 'restaurant'];\nconst CITIES = ['Amsterdam', 'Chamonix', 'Geneva'];\n\nfunction generateId() {\n  return Math.random().toString(36).substr(2, 9);\n}\nfunction generateMockOffers() {\n  return TYPES.flatMap((type) =>\n    Array.from(\n      { length: 3 },\n      () =>\n        new Offer({\n          id: generateId(),\n          type,\n          title: `Offer for ${type}`,\n          price: Math.floor(Math.random() * 100) + 10,\n        })\n    )\n  );\n}\n\nfunction generateMockDestinations() {\n  return CITIES.map(\n    (city) =>\n      new Destination({\n        id: generateId(),\n        name: city,\n        description: `${city} is a beautiful city.`,\n        pictures: [\n          {\n            src: `https://loremflickr.com/248/152?random=${Math.random()}`,\n            description: `${city} photo`,\n          },\n        ],\n      })\n  );\n}\n\nfunction generateMockPoints(offers, destinations) {\n  return Array.from({ length: 10 }, () => {\n    const type = TYPES[Math.floor(Math.random() * TYPES.length)];\n    const destination = destinations[Math.floor(Math.random() * destinations.length)];\n    const availableOffers = offers.filter((offer) => offer.type === type);\n\n    return new Point({\n      id: generateId(),\n      type,\n      destinationId: destination.id,\n      dateFrom: new Date(),\n      dateTo: new Date(Date.now() + Math.random() * 10 * 24 * 60 * 60 * 1000),\n      basePrice: Math.floor(Math.random() * 1000) + 20,\n      isFavorite: Math.random() > 0.5,\n      offerIds: availableOffers.slice(0, Math.floor(Math.random() * availableOffers.length)).map((offer) => offer.id),\n    });\n  });\n}\n\nexport function generateMockData() {\n  const offers = generateMockOffers();\n  const destinations = generateMockDestinations();\n  const points = generateMockPoints(offers, destinations);\n\n  return { offers, destinations, points };\n}\n","import { generateMockData } from '../mock/mock-data.js';\n\nexport class Model {\n  constructor() {\n    const { points, offers, destinations } = generateMockData();\n    this.points = points;\n    this.offers = offers;\n    this.destinations = destinations;\n  }\n\n  getPointDestination(point) {\n    return this.destinations.find((destination) => destination.id === point.destinationId);\n  }\n\n  getPointOffers(point) {\n    return this.offers.filter((offer) => point.offerIds.includes(offer.id));\n  }\n}\n","import TripPresenter from './presenter/trip-presenter';\n\nconst tripMainContainer = document.querySelector('.trip-main');\nconst tripEventsContainer = document.querySelector('.trip-events');\nconst trip = new TripPresenter({ tripMainContainer, tripEventsContainer });\ntrip.init();\n","import { render } from '../render';\nimport FiltersView from '../view/filters-view';\nimport SortView from '../view/sort-view';\nimport EditFormView from '../view/edit-form-view';\nimport RoutePointView from '../view/route-point-view';\nimport { Model } from '../model/model';\n\nexport default class TripPresenter {\n  constructor({ tripMainContainer, tripEventsContainer }) {\n    this.tripMainContainer = tripMainContainer;\n    this.tripEventsContainer = tripEventsContainer;\n    this.model = new Model();\n\n    this.sortElement = new SortView();\n    this.filtersComponent = new FiltersView();\n    this.routePointComponents = [];\n\n    this.routeListElement = null;\n  }\n\n  init() {\n    this.renderFilters();\n    this.renderSort();\n    this.renderRouteList();\n  }\n\n  renderFilters() {\n    const filtersContainer = this.tripMainContainer.querySelector('.trip-controls__filters');\n    render(this.filtersComponent, filtersContainer);\n  }\n\n  renderSort() {\n    render(this.sortElement, this.tripEventsContainer);\n  }\n\n  renderRouteList() {\n    this.routeListElement = document.createElement('ul');\n    this.routeListElement.classList.add('trip-events__list');\n    this.tripEventsContainer.appendChild(this.routeListElement);\n\n    // Точки маршрута\n    const points = this.model.points;\n\n    // Форма редактирования для 1-ой точки\n    if (points.length > 0) {\n      const firstPoint = points[0];\n      const destination = this.model.getPointDestination(firstPoint);\n      const selectedPointOffers = this.model.getPointOffers(firstPoint);\n      const editFormComponent = new EditFormView(firstPoint, destination, this.model.destinations, selectedPointOffers, this.model.offers);\n      render(editFormComponent, this.routeListElement);\n    }\n\n    // Остальные точки маршрута\n    points.forEach((point, index) => {\n      // Пропускаем первую точку, так как она уже отрендерена как форма редактирования\n      if (index === 0) {\n        return;\n      }\n      this.renderRoutePoint(point);\n    });\n  }\n\n  renderRoutePoint(point) {\n    const destination = this.model.getPointDestination(point);\n    const offers = this.model.getPointOffers(point);\n    const routePointComponent = new RoutePointView(point, destination, offers);\n    this.routePointComponents.push(routePointComponent);\n    render(routePointComponent, this.routeListElement);\n  }\n}\n"],"names":["EVENT_TYPES","FILTER_TYPES","createElement","template","newElement","document","innerHTML","firstElementChild","render","component","container","place","insertAdjacentElement","getElement","capitalizeFirstLetter","str","length","charAt","toUpperCase","slice","FiltersView","getTemplate","map","type","createFilterOption","join","this","element","removeElemtnt","SortView","EditForm","createEventTypeOption","removeElement","RoutePointView","constructor","point","destination","offers","createRoutePointTemplate","dateFrom","dateTo","basePrice","isFavorite","favoriteClassName","offersTemplate","offer","title","price","dateFromISO","toISOString","dateFromTime","toLocaleTimeString","hour","minute","dateFromDay","toLocaleDateString","month","day","dateToISO","dateToTime","name","Point","id","destinationId","offerIds","Offer","Destination","description","pictures","TYPES","CITIES","generateId","Math","random","toString","substr","Model","points","destinations","flatMap","Array","from","floor","city","src","availableOffers","filter","Date","now","generateMockPoints","generateMockData","getPointDestination","find","getPointOffers","includes","tripMainContainer","querySelector","tripEventsContainer","trip","model","sortElement","filtersComponent","routePointComponents","routeListElement","init","renderFilters","renderSort","renderRouteList","filtersContainer","classList","add","appendChild","firstPoint","selectedPointOffers","EditFormView","forEach","index","renderRoutePoint","routePointComponent","push"],"sourceRoot":""}