{"version":3,"file":"bundle.ed70402cf688111d0c25.js","mappings":"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","sources":["webpack://big-trip/./src/const.js","webpack://big-trip/./src/render.js","webpack://big-trip/./src/utils.js","webpack://big-trip/./src/view/filters-view.js","webpack://big-trip/./src/view/sort-view.js","webpack://big-trip/./src/view/point-view.js","webpack://big-trip/./src/view/edit-form-view.js","webpack://big-trip/./src/view/list-view.js","webpack://big-trip/./src/mock/mock.js","webpack://big-trip/./src/model/point-model.js","webpack://big-trip/./src/main.js","webpack://big-trip/./src/presenter/trip-presenter.js"],"sourcesContent":["export const RENDER_POSITION = {\n  BEFOREBEGIN: 'beforebegin',\n  AFTERBEGIN: 'afterbegin',\n  BEFOREEND: 'beforeend',\n  AFTEREND: 'afterend',\n};\n\nexport const EVENT_TYPES = ['taxi', 'bus', 'train', 'ship', 'drive', 'flight', 'check-in', 'sightseeing', 'restaurant'];\n\nexport const FILTER_TYPES = ['everything', 'future', 'present', 'past'];\n","import { RENDER_POSITION } from './const';\n\nfunction createElement(template) {\n  const newElement = document.createElement('div');\n  newElement.innerHTML = template;\n\n  return newElement.firstElementChild;\n}\n\nfunction render(component, container, place = RENDER_POSITION.BEFOREEND) {\n  container.insertAdjacentElement(place, component.getElement());\n}\n\nexport { RENDER_POSITION, createElement, render };\n","export const capitalizeFirstLetter = (str) => {\n  if (typeof str !== 'string' || str.length === 0) {\n    return str;\n  }\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\n// SEP 09\nexport const getShortDate = (date) => date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n// 2024-09-09T21:11:17.324Z\nexport const getDateISO = (date) => date.toISOString();\n// 10:30\nexport const getDateTime = (date) => date.toTimeString().slice(0, 5);\n// 19/03/19 00:00\nexport const getFormattedDate = (date) =>\n  date.toLocaleString('en-GB', { day: '2-digit', month: '2-digit', year: '2-digit', hour: '2-digit', minute: '2-digit' }).replace(',', '').replace(/\\//g, '/');\n","import { createElement } from '../render';\nimport { FILTER_TYPES } from '../const';\nimport { capitalizeFirstLetter } from '../utils';\n\nconst createFilterOption = (type) =>\n  `\n    <div class=\"trip-filters__filter\">\n      <input id=\"filter-${type}\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"${type}\">\n      <label class=\"trip-filters__filter-label\" for=\"filter-${type}\">${capitalizeFirstLetter(type)}</label>\n    </div>\n`;\n\nconst createFiltersTemplate = () =>\n  `\n    <form class=\"trip-filters\" action=\"#\" method=\"get\">\n\n      ${FILTER_TYPES.map((type) => createFilterOption(type)).join('')}\n\n      <button class=\"visually-hidden\" type=\"submit\">Accept filter</button>\n    </form>\n  `;\n\nexport default class FiltersView {\n  getTemplate() {\n    return createFiltersTemplate();\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElemtnt() {\n    this.element = null;\n  }\n}\n","import { createElement } from '../render';\n\nconst createSortTemplate = () =>\n  `\n    <form class=\"trip-events__trip-sort  trip-sort\" action=\"#\" method=\"get\">\n      <div class=\"trip-sort__item  trip-sort__item--day\">\n        <input id=\"sort-day\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-day\" checked>\n        <label class=\"trip-sort__btn\" for=\"sort-day\">Day</label>\n      </div>\n\n      <div class=\"trip-sort__item  trip-sort__item--event\">\n        <input id=\"sort-event\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-event\" disabled>\n        <label class=\"trip-sort__btn\" for=\"sort-event\">Event</label>\n      </div>\n\n      <div class=\"trip-sort__item  trip-sort__item--time\">\n        <input id=\"sort-time\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-time\">\n        <label class=\"trip-sort__btn\" for=\"sort-time\">Time</label>\n      </div>\n\n      <div class=\"trip-sort__item  trip-sort__item--price\">\n        <input id=\"sort-price\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-price\">\n        <label class=\"trip-sort__btn\" for=\"sort-price\">Price</label>\n      </div>\n\n      <div class=\"trip-sort__item  trip-sort__item--offer\">\n        <input id=\"sort-offer\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-offer\" disabled>\n        <label class=\"trip-sort__btn\" for=\"sort-offer\">Offers</label>\n      </div>\n    </form>\n  `;\n\nexport default class SortView {\n  getTemplate() {\n    return createSortTemplate();\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElemtnt() {\n    this.element = null;\n  }\n}\n","import { createElement } from '../render';\nimport { getDateISO, getDateTime, getShortDate } from '../utils';\n\nconst createPointTemplate = (point, destination, offers) => {\n  const { dateFrom, dateTo, basePrice, isFavorite, type } = point;\n\n  const favoriteClassName = isFavorite ? 'event__favorite-btn--active' : '';\n\n  const offersTemplate = offers\n    .map(\n      (offer) => `\n      <li class=\"event__offer\">\n        <span class=\"event__offer-title\">${offer.title}</span>\n        &plus;&euro;&nbsp;\n        <span class=\"event__offer-price\">${offer.price}</span>\n      </li>\n    `\n    )\n    .join('');\n\n  const dateFromDay = getShortDate(dateFrom);\n\n  const dateFromISO = getDateISO(dateFrom);\n  const dateToISO = getDateISO(dateTo);\n  const dateFromTime = getDateTime(dateFrom);\n  const dateToTime = getDateTime(dateTo);\n\n  return `\n    <li class=\"trip-events__item\">\n      <div class=\"event\">\n        <time class=\"event__date\" datetime=\"${dateFromISO}\">${dateFromDay}</time>\n        <div class=\"event__type\">\n          <img class=\"event__type-icon\" width=\"42\" height=\"42\" src=\"img/icons/${type}.png\" alt=\"Event type icon\">\n        </div>\n        <h3 class=\"event__title\">${type} ${destination.name}</h3>\n        <div class=\"event__schedule\">\n          <p class=\"event__time\">\n            <time class=\"event__start-time\" datetime=\"${dateFromISO}\">${dateFromTime}</time>\n            &mdash;\n            <time class=\"event__end-time\" datetime=\"${dateToISO}\">${dateToTime}</time>\n          </p>\n          <p class=\"event__duration\">30M</p>\n        </div>\n        <p class=\"event__price\">\n          &euro;&nbsp;<span class=\"event__price-value\">${basePrice}</span>\n        </p>\n        <h4 class=\"visually-hidden\">Offers:</h4>\n        <ul class=\"event__selected-offers\">\n          ${offersTemplate}\n        </ul>\n        <button class=\"event__favorite-btn ${favoriteClassName}\" type=\"button\">\n          <span class=\"visually-hidden\">Add to favorite</span>\n          <svg class=\"event__favorite-icon\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\">\n            <path d=\"M14 21l-8.22899 4.3262 1.57159-9.1631L.685209 9.67376 9.8855 8.33688 14 0l4.1145 8.33688 9.2003 1.33688-6.6574 6.48934 1.5716 9.1631L14 21z\"/>\n          </svg>\n        </button>\n        <button class=\"event__rollup-btn\" type=\"button\">\n          <span class=\"visually-hidden\">Open event</span>\n        </button>\n      </div>\n    </li>\n  `;\n};\n\nexport default class PointView {\n  constructor(point, pointModel) {\n    this.point = point;\n    this.pointModel = pointModel;\n  }\n\n  getTemplate() {\n    const point = this.point;\n    const destination = this.pointModel.getDestinationById(point.destinationId);\n    const offers = this.pointModel.getOffersByType(point.type);\n\n    return createPointTemplate(point, destination, offers);\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","import { createElement } from '../render';\nimport { EVENT_TYPES } from '../const';\nimport { capitalizeFirstLetter } from '../utils';\nimport { getFormattedDate } from '../utils';\n\nconst createEventTypeOption = (type, currentType) => {\n  const isChecked = currentType === type ? 'checked' : '';\n\n  return `\n    <div class=\"event__type-item\">\n      <input id=\"event-type-${type}-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"${type}\" ${isChecked}>\n      <label class=\"event__type-label  event__type-label--${type}\" for=\"event-type-${type}-1\">${capitalizeFirstLetter(type)}</label>\n    </div>`;\n};\n\nconst createOfferTemplate = (offer, isChecked) => `\n  <div class=\"event__offer-selector\">\n    <input class=\"event__offer-checkbox  visually-hidden\" id=\"event-offer-${offer.id}-1\" type=\"checkbox\" name=\"event-offer-${offer.id}\" ${isChecked}>\n    <label class=\"event__offer-label\" for=\"event-offer-${offer.id}-1\">\n      <span class=\"event__offer-title\">${offer.title}</span>\n      &plus;&euro;&nbsp;\n      <span class=\"event__offer-price\">${offer.price}</span>\n    </label>\n  </div>`;\n\nconst createOffersSection = (point, offers) => {\n  if (!offers || (offers && offers.length === 0)) {\n    return '';\n  }\n\n  const offersTemplate = offers.map((offer) => createOfferTemplate(offer, point.offerIds.includes(offer.id))).join('');\n\n  return `\n    <section class=\"event__section  event__section--offers\">\n      <h3 class=\"event__section-title  event__section-title--offers\">Offers</h3>\n      <div class=\"event__available-offers\">\n        ${offersTemplate}\n      </div>\n    </section>`;\n};\n\nconst createPhotosTemplate = (pictures) => {\n  if (!pictures || pictures.length === 0) {\n    return '';\n  }\n\n  return `\n    <div class=\"event__photos-container\">\n      <div class=\"event__photos-tape\">\n        ${pictures.map((photo) => `<img class=\"event__photo\" src=\"${photo.src}\" alt=\"Event photo\">`).join('')}\n      </div>\n    </div>`;\n};\n\nconst createFormTemplate = (point, destination, offers, allDestinations) =>\n  `\n    <form class=\"event event--edit\" action=\"#\" method=\"post\">\n      <header class=\"event__header\">\n        <div class=\"event__type-wrapper\">\n          <label class=\"event__type  event__type-btn\" for=\"event-type-toggle-1\">\n            <span class=\"visually-hidden\">Choose event type</span>\n            <img class=\"event__type-icon\" width=\"17\" height=\"17\" src=\"img/icons/${point.type}.png\" alt=\"Event type icon\">\n          </label>\n          <input class=\"event__type-toggle  visually-hidden\" id=\"event-type-toggle-1\" type=\"checkbox\">\n\n          <div class=\"event__type-list\">\n            <fieldset class=\"event__type-group\">\n              <legend class=\"visually-hidden\">Event type</legend>\n              ${EVENT_TYPES.map((type) => createEventTypeOption(type)).join('')}\n            </fieldset>\n          </div>\n        </div>\n\n        <div class=\"event__field-group  event__field-group--destination\">\n          <label class=\"event__label  event__type-output\" for=\"event-destination-1\">\n            ${capitalizeFirstLetter(point.type)}\n          </label>\n          <input class=\"event__input event__input--destination\" id=\"event-destination-1\" type=\"text\" name=\"event-destination\"\n            value=\"${destination.name}\" list=\"destination-list-1\">\n          <datalist id=\"destination-list-1\">\n            ${allDestinations.map((dest) => `<option value=\"${dest.name}\"></option>`).join('')}\n          </datalist>\n        </div>\n\n        <div class=\"event__field-group  event__field-group--time\">\n          <label class=\"visually-hidden\" for=\"event-start-time-1\">From</label>\n          <input class=\"event__input  event__input--time\" id=\"event-start-time-1\" type=\"text\" name=\"event-start-time\"\n            value=\"${getFormattedDate(point.dateFrom)}\">\n          &mdash;\n          <label class=\"visually-hidden\" for=\"event-end-time-1\">To</label>\n          <input class=\"event__input  event__input--time\" id=\"event-end-time-1\" type=\"text\" name=\"event-end-time\" value=\"${getFormattedDate(point.dateTo)}\">\n        </div>\n\n        <div class=\"event__field-group  event__field-group--price\">\n          <label class=\"event__label\" for=\"event-price-1\">\n            <span class=\"visually-hidden\">Price</span>\n            &euro;\n          </label>\n          <input class=\"event__input  event__input--price\" id=\"event-price-1\" type=\"text\" name=\"event-price\" value=\"${point.basePrice}\">\n        </div>\n\n        <button class=\"event__save-btn  btn  btn--blue\" type=\"submit\">Save</button>\n        <button class=\"event__reset-btn\" type=\"reset\">Delete</button>\n        <button class=\"event__rollup-btn\" type=\"button\">\n          <span class=\"visually-hidden\">Open event</span>\n        </button>\n      </header>\n      <section class=\"event__details\">\n        ${createOffersSection(point, offers)}\n\n        <section class=\"event__section  event__section--destination\">\n          <h3 class=\"event__section-title  event__section-title--destination\">Destination</h3>\n          <p class=\"event__destination-description\">${destination.description}</p>\n          ${createPhotosTemplate(destination.pictures)}\n        </section>\n      </section>\n    </form>\n  `;\n\nexport default class EditForm {\n  constructor(point, pointModel) {\n    this.point = point;\n    this.pointModel = pointModel;\n  }\n\n  getTemplate() {\n    const point = this.point;\n    const destination = this.pointModel.getDestinationById(point.destinationId);\n    const offers = this.pointModel.getOffersByType(point.type);\n    const allDestinations = this.pointModel.getAllDestinations();\n\n    return createFormTemplate(point, destination, offers, allDestinations);\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","import { createElement } from '../render.js';\nimport PointView from './point-view.js';\nimport EditFormView from './edit-form-view.js';\n\nconst createListTemplate = (points, pointModel) => {\n  const pointElements = points\n    .map((point, index) => {\n      if (index === 0) {\n        // Форма редактирования для 1-ой точки\n        const editFormView = new EditFormView(point, pointModel);\n        return editFormView.getTemplate();\n      } else {\n        // Остальные точки маршрута\n        const pointView = new PointView(point, pointModel);\n        return pointView.getTemplate();\n      }\n    })\n    .join('');\n\n  return `\n    <ul class=\"trip-events__list\">\n        ${pointElements}\n    </ul>`;\n};\n\nexport default class ListView {\n  constructor(points, pointModel) {\n    this.points = points;\n    this.pointModel = pointModel;\n  }\n\n  getTemplate() {\n    return createListTemplate(this.points, this.pointModel);\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","import { EVENT_TYPES } from '../const';\n\nfunction generateId() {\n  return Math.random().toString(36).substr(2, 9);\n}\n\nfunction randomInt(int) {\n  return Math.floor(Math.random() * int);\n}\n\n// Генерация предложений\nfunction generateMockOffers() {\n  return EVENT_TYPES.map((type) => ({\n    type,\n    offers: Array.from({ length: randomInt(5) }, () => ({\n      id: generateId(),\n      title: `Offer for ${type}`,\n      price: randomInt(200) + 10,\n    })),\n  }));\n}\n\n// Генерация городов назначения\nfunction generateMockDestinations() {\n  const CITIES = ['Amsterdam', 'Barcelona', 'Berlin', 'Paris', 'Rome', 'London', 'Vienna', 'Prague', 'Madrid', 'Venice'];\n  const DESCRIPTIONS = [\n    'a true pearl',\n    'is a beautiful city',\n    'famous for its crowded street markets with the best street food',\n    'a perfect place to stay with a family',\n    'for those who value comfort and coziness',\n    'with a beautiful old town',\n    'a paradise',\n    'with an embankment of a mighty river as a centre of attraction',\n    'full of cozy canteens where you can try the best coffee',\n    'known for its vibrant nightlife and cultural scene',\n  ];\n\n  return CITIES.map((city) => ({\n    id: generateId(),\n    name: city,\n    description: `${city} - ${DESCRIPTIONS[randomInt(DESCRIPTIONS.length)]}`,\n    pictures: Array.from({ length: randomInt(7) }, () => ({\n      src: `http://loremflickr.com/248/152?random=${Math.random()}`,\n      description: `${city} photo`,\n    })),\n  }));\n}\n\n// Генерация 10 точек маршрута\nfunction generateMockPoints(offers, destinations) {\n  return Array.from({ length: 10 }, () => {\n    const type = EVENT_TYPES[randomInt(EVENT_TYPES.length)];\n    const destination = destinations[randomInt(destinations.length)];\n    const availableOffers = offers.filter((offer) => offer.type === type);\n\n    return {\n      id: generateId(),\n      type,\n      destinationId: destination.id,\n      dateFrom: new Date(),\n      dateTo: new Date(Date.now() + Math.random() * 10 * 24 * 60 * 60 * 1000),\n      basePrice: randomInt(1000) + 20,\n      isFavorite: Math.random() > 0.5,\n      offerIds: availableOffers.slice(0, randomInt(availableOffers.length)).map((offer) => offer.id),\n    };\n  });\n}\n\nexport function generateMockData() {\n  const offers = generateMockOffers();\n  const destinations = generateMockDestinations();\n  const points = generateMockPoints(offers, destinations);\n\n  return { offers, destinations, points };\n}\n","import { generateMockData } from '../mock/mock';\n\nexport class PointModel {\n  constructor() {\n    const { points, offers, destinations } = generateMockData();\n    this.points = points;\n    this.offers = offers;\n    this.destinations = destinations;\n  }\n\n  getDestinationById(id) {\n    return this.destinations.find((destination) => destination.id === id);\n  }\n\n  getOffersByType(type) {\n    return this.offers.find((offer) => offer.type === type)?.offers || [];\n  }\n\n  getAllDestinations() {\n    return this.destinations;\n  }\n}\n","import TripPresenter from './presenter/trip-presenter';\n\nconst tripMainContainer = document.querySelector('.trip-main');\nconst tripEventsContainer = document.querySelector('.trip-events');\nconst trip = new TripPresenter({ tripMainContainer, tripEventsContainer });\ntrip.init();\n","import { render } from '../render';\nimport FiltersView from '../view/filters-view';\nimport SortView from '../view/sort-view';\nimport ListView from '../view/list-view';\nimport { PointModel } from '../model/point-model';\n\nexport default class TripPresenter {\n  constructor({ tripMainContainer, tripEventsContainer }) {\n    this.tripMainContainer = tripMainContainer;\n    this.tripEventsContainer = tripEventsContainer;\n    this.pointModel = new PointModel();\n    this.ListComponent = null;\n\n    this.routePointComponents = [];\n  }\n\n  init() {\n    this.renderFilters();\n    this.renderSort();\n    this.renderRouteList();\n  }\n\n  renderFilters() {\n    const filtersContainer = this.tripMainContainer.querySelector('.trip-controls__filters');\n    render(new FiltersView(), filtersContainer);\n  }\n\n  renderSort() {\n    render(new SortView(), this.tripEventsContainer);\n  }\n\n  renderRouteList() {\n    const points = this.pointModel.points;\n    render(new ListView(points, this.pointModel), this.tripEventsContainer);\n  }\n}\n"],"names":["EVENT_TYPES","FILTER_TYPES","createElement","template","newElement","document","innerHTML","firstElementChild","render","component","container","place","insertAdjacentElement","getElement","capitalizeFirstLetter","str","length","charAt","toUpperCase","slice","getDateISO","date","toISOString","getDateTime","toTimeString","getFormattedDate","toLocaleString","day","month","year","hour","minute","replace","FiltersView","getTemplate","map","type","createFilterOption","join","this","element","removeElemtnt","SortView","PointView","constructor","point","pointModel","createPointTemplate","destination","offers","dateFrom","dateTo","basePrice","isFavorite","favoriteClassName","offersTemplate","offer","title","price","dateFromDay","toLocaleDateString","dateFromISO","dateToISO","dateFromTime","dateToTime","name","getDestinationById","destinationId","getOffersByType","removeElement","EditForm","createFormTemplate","allDestinations","createEventTypeOption","dest","createOffersSection","createOfferTemplate","isChecked","id","offerIds","includes","description","pictures","photo","src","getAllDestinations","ListView","points","index","EditFormView","createListTemplate","generateId","Math","random","toString","substr","randomInt","int","floor","PointModel","destinations","Array","from","DESCRIPTIONS","city","generateMockDestinations","availableOffers","filter","Date","now","generateMockPoints","generateMockData","find","tripMainContainer","querySelector","tripEventsContainer","trip","ListComponent","routePointComponents","init","renderFilters","renderSort","renderRouteList","filtersContainer"],"sourceRoot":""}